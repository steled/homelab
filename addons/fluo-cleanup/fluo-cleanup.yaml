apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluo-cleanup
  namespace: kube-system
  labels:
    app: fluo-cleanup
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluo-cleanup
  labels:
    app: fluo-cleanup
rules:
- apiGroups: [""]
  resources: ["namespaces", "serviceaccounts"]
  verbs: ["list", "delete"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments"]
  verbs: ["list", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings", "roles", "rolebindings"]
  verbs: ["list", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluo-cleanup
  labels:
    app: fluo-cleanup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluo-cleanup
subjects:
- kind: ServiceAccount
  name: fluo-cleanup
  namespace: kube-system
---
apiVersion: batch/v1
kind: Job
metadata:
  name: fluo-cleanup
  namespace: kube-system
  labels:
    app: fluo-cleanup
spec:
  # ttlSecondsAfterFinished: 60
  # wait for 10 mins and than cleanup pod and job
  ttlSecondsAfterFinished: 600
  template:
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          kubectl delete -f https://raw.githubusercontent.com/kubermatic/kubeone/refs/heads/main/addons/unattended-upgrades/fluo.yaml
          kubectl delete serviceaccount -l app=fluo-cleanup -n kube-system
          kubectl delete clusterrole -l app=fluo-cleanup
          kubectl delete job -l app=fluo-cleanup -n kube-system
          exit 0
        image: bitnami/kubectl
        imagePullPolicy: IfNotPresent
        name: fluo-cleanup
      restartPolicy: Never
      serviceAccount: fluo-cleanup
